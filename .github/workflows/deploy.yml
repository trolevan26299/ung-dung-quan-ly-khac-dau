name: Build and Deploy Khắc Dấu App

on:
  push:
    branches: [ production ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Backend image
      uses: docker/build-push-action@v5
      with:
        context: ./Backend
        file: ./Backend/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/khacdau-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/khacdau-frontend:latest
        build-args: |
          REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production'
    
    steps:
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        script: |
          cd /root/khacdau-app
          
          # Pull latest images
          docker pull ${{ secrets.DOCKER_USERNAME }}/khacdau-backend:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/khacdau-frontend:latest
          
          # Stop and remove old containers
          docker-compose down
          
          # Start new containers
          docker-compose up -d
          
          # Clean up unused images
          docker image prune -f 